name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      IS_GITHUB_PAGES: 'true'
      REPO_NAME: 'acce-website'   # <-- must match your repo exactly
    steps:
      - name: Check out your repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          npm config set registry https://registry.npmjs.org/
          npm ci

      - name: Build your site (static export to out/)
        run: npm run build

      - name: Add .nojekyll (needed for _next/)
        run: touch out/.nojekyll

      - name: Debug â€” list exported folders (optional)
        run: |
          ls -R out | sed -n '1,200p' || true

      - name: Prefix root-relative URLs in HTML/CSS only
        run: |
          node - <<'NODE'
          const fs = require('fs');
          const path = require('path');

          const repo = (process.env.REPO_NAME || '').replace(/^\/+|\/+$/g, '');
          if (!repo) {
            console.error('REPO_NAME env missing');
            process.exit(1);
          }
          const prefix = '/' + repo;

          // Only touch html/css to avoid breaking Next's chunk loader.
          const exts = new Set(['.html', '.css']);

          let files = 0, edits = 0;

          function rewriteHTMLCSS(content) {
            let s = content;

            // Helper: add prefix to a path that starts with "/"
            const addPrefix = (p) => {
              if (!p.startsWith('/')) return p;                         // not root-relative
              if (p.startsWith(prefix + '/')) return p;                 // already prefixed
              if (p.startsWith('/_next/')) return p;                    // Next assets
              return prefix + p;
            };

            // 1) Rewrite src|href|content attributes with root-relative paths
            s = s.replace(/\b(?:src|href|content)=["']([^"']+)["']/g, (m, url) => {
              const newUrl = addPrefix(url);
              if (newUrl !== url) { edits++; return m.replace(url, newUrl); }
              return m;
            });

            // 2) Rewrite srcset lists
            s = s.replace(/\bsrcset=(["'])([^"']+)\1/g, (m, q, list) => {
              const rewritten = list.split(',')
                .map(part => {
                  const trimmed = part.trim();
                  const [u, ...rest] = trimmed.split(/\s+/);
                  const newU = addPrefix(u);
                  return [newU, ...rest].join(' ');
                })
                .join(', ');
              if (rewritten !== list) edits++;
              return `srcset=${q}${rewritten}${q}`;
            });

            // 3) Rewrite CSS url(/...)
            s = s.replace(/url\(\s*(['"]?)(\/[^'")]+)\1\s*\)/g, (m, quote, url) => {
              const newUrl = addPrefix(url);
              if (newUrl !== url) { edits++; return `url(${quote}${newUrl}${quote})`; }
              return m;
            });

            return s;
          }

          function walk(dir) {
            for (const d of fs.readdirSync(dir, { withFileTypes: true })) {
              const p = path.join(dir, d.name);
              if (d.isDirectory()) walk(p);
              else {
                const ext = path.extname(p);
                if (!exts.has(ext)) continue;
                const before = fs.readFileSync(p, 'utf8');
                const after = rewriteHTMLCSS(before);
                if (after !== before) fs.writeFileSync(p, after);
                files++;
              }
            }
          }

          walk('out');
          console.log(`Processed ${files} files; rewrote ${edits} occurrence(s). Prefix = ${prefix}`);
          NODE

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: out/

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

